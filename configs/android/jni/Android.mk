# useful command line for regenerating this stuff
# find . -name "*.h" |sed "s|\.\/\(.*\)\/[A-Za-z0-9_.-]*$|\t\"\1\",|g" |uniq

LOCAL_PATH := $(call my-dir)

# "Engine" relative to jni directory
PAPER3D_PATH := ../../..
TECH_PATH := ../../../../Tech

OUTPUT_PATH := $(NDK_APP_OUT)/local/armeabi

PAPER3D_OUTPUT_PATH := $(LOCAL_PATH)/$(PAPER3D_PATH)/lib/android

PAPER3D_DEFINES := -DANDROID 

ifeq ($(USE_STL), 1) 
PAPER3D_DEFINES := $(PAPER3D_DEFINES) -DP_USE_STL
$(info ...Use native STL...)
else
$(info ...No STL support...)
endif

ifeq ($(ENABLE_LOGGING), 1) 
PAPER3D_DEFINES := $(PAPER3D_DEFINES) -DP_ENABLE_LOGGING
$(info ...Enable logging...)
else
$(info ...Disable logging...)
endif

ifeq ($(NDK_DEBUG), 1)
CONF_FLAGS := -g -DDEBUG -D_DEBUG -DANDROID_NDK
PAPER3D_OUTPUT_PATH := $(PAPER3D_OUTPUT_PATH)/Debug
$(info ...Building debug version...)
else
CONF_FLAGS := -DANDROID_NDK
PAPER3D_OUTPUT_PATH := $(PAPER3D_OUTPUT_PATH)/Release
$(info ...Building release version...)
# CONF_FLAGS := -O2  # not a good idea, -O0 is generated by ndk-build
endif

$(PAPER3D_OUTPUT_PATH):
	mkdir $(subst /,\,$(PAPER3D_OUTPUT_PATH))

PAPER3D_C_FLAGS := $(PAPER3D_DEFINES) $(CONF_FLAGS) -fexceptions -frtti

# find sources -name "*.h" |sed "s|\(.*src\)\/.*\$|\$(LOCAL_PATH)/\$(PAPER3D_PATH)\/\1\/ \\\\|g" |uniq
PAPER3D_LIBRARY_INCLUDE_PATHS := \
$(LOCAL_PATH)/$(PAPER3D_PATH)/include \
$(LOCAL_PATH)/$(TECH_PATH)/include

PAPER3D_INCLUDE_PATHS := $(PAPER3D_LIBRARY_INCLUDE_PATHS) $(EXT_LIBRARY_INCLUDE_PATHS)

include $(CLEAR_VARS)


#
###################################################################### paper3d
#
include $(CLEAR_VARS)

LOCAL_MODULE := paper3d
LOCAL_CFLAGS := $(PAPER3D_C_FLAGS)
LOCAL_C_INCLUDES := $(PAPER3D_INCLUDE_PATHS)

# find src -name "*.cpp" |sed "s|\(^.*\$\)|\$(PAPER3D_PATH)\/\\1 \\\\|"
LOCAL_SRC_FILES := \
$(PAPER3D_PATH)/src/animation/panimationinstance.cpp \
$(PAPER3D_PATH)/src/animation/panimationmanager.cpp \
$(PAPER3D_PATH)/src/animation/pkeyframe.cpp \
$(PAPER3D_PATH)/src/animation/pskeleton.cpp \
$(PAPER3D_PATH)/src/effect/pabstracteffect.cpp \
$(PAPER3D_PATH)/src/effect/peffectfactory.cpp \
$(PAPER3D_PATH)/src/effect/peffectglow.cpp \
$(PAPER3D_PATH)/src/renderer/geometry/pabstractgeometry.cpp \
$(PAPER3D_PATH)/src/renderer/geometry/pgeometrycube.cpp \
$(PAPER3D_PATH)/src/renderer/geometry/pgeometrymesh.cpp \
$(PAPER3D_PATH)/src/renderer/geometry/pgeometryplane.cpp \
$(PAPER3D_PATH)/src/renderer/geometry/pgeometrysphere.cpp \
$(PAPER3D_PATH)/src/renderer/material/pabstractrenderparameter.cpp \
$(PAPER3D_PATH)/src/renderer/material/pcameraparameter.cpp \
$(PAPER3D_PATH)/src/renderer/material/plightparameter.cpp \
$(PAPER3D_PATH)/src/renderer/material/pmaterial.cpp \
$(PAPER3D_PATH)/src/renderer/material/pmaterialparameter.cpp \
$(PAPER3D_PATH)/src/renderer/material/ptransformparameter.cpp \
$(PAPER3D_PATH)/src/renderer/prenderer.cpp \
$(PAPER3D_PATH)/src/renderer/prenderpass.cpp \
$(PAPER3D_PATH)/src/renderer/pshadowpass.cpp \
$(PAPER3D_PATH)/src/renderer/prenderstate.cpp \
$(PAPER3D_PATH)/src/renderer/prendertarget.cpp \
$(PAPER3D_PATH)/src/renderer/prendertransform.cpp \
$(PAPER3D_PATH)/src/renderer/queue/prenderdrawablequeue.cpp \
$(PAPER3D_PATH)/src/renderer/queue/prenderlightqueue.cpp \
$(PAPER3D_PATH)/src/renderer/queue/prenderqueue.cpp \
$(PAPER3D_PATH)/src/resource/cache/panimationloader.cpp \
$(PAPER3D_PATH)/src/resource/cache/pcacheobject.cpp \
$(PAPER3D_PATH)/src/resource/cache/pmaterialcache.cpp \
$(PAPER3D_PATH)/src/resource/cache/pmeshcache.cpp \
$(PAPER3D_PATH)/src/resource/cache/pmeshloader.cpp \
$(PAPER3D_PATH)/src/resource/cache/presourcecache.cpp \
$(PAPER3D_PATH)/src/resource/cache/ptexturecache.cpp \
$(PAPER3D_PATH)/src/resource/panimationresource.cpp \
$(PAPER3D_PATH)/src/resource/pframebuffer.cpp \
$(PAPER3D_PATH)/src/resource/pmaterialresource.cpp \
$(PAPER3D_PATH)/src/resource/pmesh.cpp \
$(PAPER3D_PATH)/src/resource/presourcemanager.cpp \
$(PAPER3D_PATH)/src/resource/presourceobject.cpp \
$(PAPER3D_PATH)/src/resource/ptexture.cpp \
$(PAPER3D_PATH)/src/scene_graph/camera/pcamera.cpp \
$(PAPER3D_PATH)/src/scene_graph/drawable/pbackground.cpp \
$(PAPER3D_PATH)/src/scene_graph/drawable/pbillboard.cpp \
$(PAPER3D_PATH)/src/scene_graph/drawable/pdrawable.cpp \
$(PAPER3D_PATH)/src/scene_graph/drawable/pskybox.cpp \
$(PAPER3D_PATH)/src/scene_graph/drawable/psprite.cpp \
$(PAPER3D_PATH)/src/scene_graph/drawable/psprite2d.cpp \
$(PAPER3D_PATH)/src/scene_graph/drawable/pwaterwave.cpp \
$(PAPER3D_PATH)/src/scene_graph/light/pabstractlight.cpp \
$(PAPER3D_PATH)/src/scene_graph/light/pdirectionallight.cpp \
$(PAPER3D_PATH)/src/scene_graph/light/ppointlight.cpp \
$(PAPER3D_PATH)/src/scene_graph/light/pspotlight.cpp \
$(PAPER3D_PATH)/src/scene_graph/pnode.cpp \
$(PAPER3D_PATH)/src/scene_graph/pnodefactory.cpp \
$(PAPER3D_PATH)/src/scene_graph/prootnode.cpp \
$(PAPER3D_PATH)/src/scene_graph/pscene.cpp \
$(PAPER3D_PATH)/src/scene_graph/pscenemanager.cpp 


include $(BUILD_STATIC_LIBRARY)

###################################################################### output .so
	
all: $(PAPER3D_OUTPUT_PATH) \
	paper3d 
	cp -f $(OUTPUT_PATH)/libpaper3d.a $(PAPER3D_OUTPUT_PATH)/

clean:
	rm -f $(PAPER3D_OUTPUT_PATH)/libpaper3d.a


